FEATURE_TEST_MACROS(7)          Manuel du programmeur Linux          FEATURE_TEST_MACROS(7)

[1mNOM[0m
       feature_test_macros ‚Äì Macros de test de fonctionnalit√©s

[1mDESCRIPTION[0m
       Les macros de test de fonctionnalit√©s permettent au programmeur de contr√¥ler quelles
       d√©finitions sont expos√©es par les fichiers d'en‚Äêt√™tes  syst√®me  lorsqu'un  programme
       est compil√©.

       [1mNOTE :  [22mpour  avoir un effet, une macro de test de fonctionnalit√©s [4mdoit[24m [4m√™tre[24m [4md√©finie[0m
       [4mavant[24m [4md'inclure[24m [4mtout[24m [4mfichier[24m [4md'en‚Äêt√™te[24m. Cela peut √™tre accompli soit dans  la  ligne
       de commande de compilation ([4mcc[24m [4m-DMACRO=valeur[24m), soit en d√©finissant la macro dans le
       code source avant d'inclure tout en‚Äêt√™te. L‚Äôexigence que la macro soit d√©finie avant
       d‚Äôinclure  n‚Äôimporte  quel fichier d‚Äôen-t√™te existe parce que les fichiers d‚Äôen-t√™te
       peuvent librement s‚Äôinclure mutuellement. Donc, par exemple, dans  les  lignes  sui‚Äê
       vantes,  d√©finir  la  macro [1m_GNU_SOURCE [22mpeut n‚Äôavoir aucun effet parce que l‚Äôen-t√™te
       [4m<abc.h>[24m lui-m√™me inclut [4m<xyz.h>[24m (POSIX le permet explicitement) :

           #include <abc.h>
           #define _GNU_SOURCE
           #include <xyz.h>

       Certaines macros de test de fonctionnalit√©s sont utiles pour cr√©er des  applications
       portables,  en  emp√™chant  des d√©finitions non normalis√©es d'√™tre expos√©es. D'autres
       macros peuvent √™tre utilis√©es pour exposer des d√©finitions non  normalis√©es  qui  ne
       sont pas expos√©es par d√©faut.

       Les effets pr√©cis de chacune des macros d√©crites ci‚Äêdessous peuvent √™tre v√©rifi√©s en
       inspectant le fichier d'en‚Äêt√™te [4m<features.h>[24m. [1mRemarque [22m: les applications [4mn‚Äôont[24m  [4mpas[0m
       besoin  d‚Äôinclure  directement  [4m<features.h>[24m. En fait, le faire est fortement d√©con‚Äê
       seill√©. Consultez les NOTES.

   [1mSp√©cification des exigences de macro de test de fonctionnalit√©s dans les pages de manuel[0m
       Quand une fonction n√©cessite qu'une macro de test de fonctionnalit√©s  soit  d√©finie,
       la  section SYNOPSIS de la page de manuel comprend g√©n√©ralement une note de la forme
       suivante (exemple pris dans la page de manuel [1macct[22m(2)) :

              [1m#include <unistd.h>[0m

              [1mint acct(const char *[4m[22mfichier[24m[1m);[0m

          Exigences de macros de test de fonctionnalit√©s pour
          la glibc (consultez [1mfeature_test_macros[22m(7)) :

              [1macct[22m() : _BSD_SOURCE || (_XOPEN_SOURCE && _XOPEN_SOURCE < 500)

       Les doubles barres [1m|| [22msignifient que pour obtenir la d√©claration de  [1macct[22m(2)  depuis
       [4m<unistd.h>[24m, [4mune[24m des d√©finitions de macros doit √™tre utilis√©e avant d'inclure les fi‚Äê
       chiers d'en-t√™te :

           #define _BSD_SOURCE
           #define _XOPEN_SOURCE        /* Ou toute valeur < 500 */

       Autrement, des d√©finitions √©quivalentes peuvent √™tre faites lors de l'appel au  com‚Äê
       pilateur :

           cc -D_BSD_SOURCE
           cc -D_XOPEN_SOURCE           # Ou toute valeur < 500

       Veuillez noter que, comme d√©crit ci-dessous, [1mcertaines macros de test de fonctionna‚Äê[0m
       [1mlit√©s sont d√©finies par d√©faut[22m, et il n'est donc pas toujours n√©cessaire  de  sp√©ci‚Äê
       fier explicitement les macros indiqu√©es dans le SYNOPSIS.

       Dans certains cas, les pages de manuel utilisent des raccourcis pour exprimer la n√©‚Äê
       cessit√© de certaines macros de test (exemple tir√© de [1mreadahead[22m(2)) :

           [1m#define _GNU_SOURCE[0m
           [1m#include <fcntl.h>[0m

           [1mssize_t readahead(int [4m[22mfd[24m[1m, off64_t *[4m[22moffset[24m[1m, size_t [4m[22mcount[24m[1m);[0m

       Ce format est utilis√© dans les cas o√π seule une macro  de  test  de  fonctionnalit√©s
       peut  √™tre  utilis√©e pour exposer la d√©claration de la fonction et quand cette macro
       n'est pas d√©finie par d√©faut.

   [1mMacros de test de fonctionnalit√©s comprises par la glibc[0m
       Les paragraphes suivants expliquent comment les macros de  test  de  fonctionnalit√©s
       sont g√©r√©es dans les glibc 2.[4mx[24m, [4mx[24m > 0.

       Tout d‚Äôabord, un aper√ßu de quelques d√©tails pour l‚Äôimpatient :

       ‚Äì  Les  macros les plus susceptibles d‚Äô√™tre utilis√©es dans des codes source modernes
          sont [1m_POSIX_C_SOURCE [22m(pour des d√©finitions de diverses versions de POSIX.1), [1m_XO‚Äê[0m
          [1mPEN_SOURCE  [22m(pour des d√©finitions de diverses versions de SUS), [1m_GNU_SOURCE [22m(pour
          certaines choses sp√©cifiques √† GNU ou Linux) et [1m_DEFAULT_SOURCE [22m(pour obtenir des
          d√©finitions qui normalement devrait √™tre fournies par d√©faut).

       ‚Äì  Certaines  macros sont d√©finies avec des valeurs par d√©faut. Par cons√©quent, m√™me
          si une ou plusieurs macros sont indiqu√©es  comme  n√©cessaires  dans  le  SYNOPSIS
          d‚Äôune  page  de  manuel, il peut ne pas √™tre n√©cessaire de les d√©finir explicite‚Äê
          ment. Tous les d√©tails sur les valeurs par d√©faut sont donn√©s ci-apr√®s dans cette
          page de manuel.

       ‚Äì  D√©finir  [1m_XOPEN_SOURCE  [22mavec  une valeur de 600 ou plus produit le m√™me effet que
          d√©finir [1m_POSIX_C_SOURCE [22mavec une valeur de 200112L ou sup√©rieure. Lorsqu‚Äôappara√Æt

              _POSIX_C_SOURCE >= 200112L

          dans les n√©cessit√©s des macros de test de fonctionnalit√©s dans le SYNOPSIS  d‚Äôune
          page de manuel, il est implicite que ce qui suit a le m√™me effet :

              _XOPEN_SOURCE >= 600

       ‚Äì  D√©finir  [1m_XOPEN_SOURCE  [22mavec  une valeur de 700 ou plus produit le m√™me effet que
          d√©finir [1m_POSIX_C_SOURCE [22mavec une valeur de 200809L ou sup√©rieure. Lorsqu‚Äôappara√Æt

              _POSIX_C_SOURCE >= 200809L

          dans les n√©cessit√©s des macros de test de fonctionnalit√©s dans le SYNOPSIS  d‚Äôune
          page de manuel, il est implicite que ce qui suit a le m√™me effet :

              _XOPEN_SOURCE >= 700

       La glibc comprend les macros de test de fonctionnalit√©s suivantes :

       [1m__STRICT_ANSI__[0m
              Norme C ISO. Cette macro est d√©finie implicitement par [1mgcc[22m(1) lors des appels
              avec, par exemple, l'indicateur [4m-std=c99[24m ou [4m-ansi[24m.

       [1m_POSIX_C_SOURCE[0m
              Si cette macro est d√©finie, les en-t√™tes exposent les d√©finitions suivantes :

              ‚Ä¢  La valeur 1 expose les  d√©finitions  conformes  √†  POSIX.1-1990  et  C ISO
                 (1990).

              ‚Ä¢  Les  valeurs sup√©rieures ou √©gales √† 2 exposent en plus les d√©finitions de
                 POSIX.2-1992.

              ‚Ä¢  Les valeurs sup√©rieures ou √©gales √† 199309L exposent en plus  les  d√©fini‚Äê
                 tions de POSIX.1b (extensions temps-r√©el).

              ‚Ä¢  Les  valeurs  sup√©rieures ou √©gales √† 199506L exposent en plus les d√©fini‚Äê
                 tions de POSIX.1c (threads).

              ‚Ä¢  (Depuis la glibc 2.3.3) Les valeurs sup√©rieures ou √©gales  √†  200112L  ex‚Äê
                 posent  de plus les d√©finitions correspondantes √† la sp√©cification de base
                 POSIX.1-2001 (sans l'extension XSI) et activent √©galement les  fonctionna‚Äê
                 lit√©s  C95  (depuis  la  glibc 2.12)  et  C99  (depuis la glibc 2.10) ‚Äî en
                 d‚Äôautres mots, l‚Äô√©quivalent de d√©finir [1m_ISOC99_SOURCE[22m.

              ‚Ä¢  (Depuis la glibc 2.10) Les valeurs sup√©rieures ou  √©gales  √†  200809L  ex‚Äê
                 posent  de plus les d√©finitions correspondantes √† la sp√©cification de base
                 POSIX.1-2008 (sans l'extension XSI).

       [1m_POSIX_SOURCE[0m
              D√©finir cette macro obsol√®te (quelle que soit sa valeur) est √©quivalent √† d√©‚Äê
              finir [1m_POSIX_C_SOURCE [22m√† la valeur 1.

              Puisque  cette macro est obsol√®te, son utilisation n‚Äôest g√©n√©ralement pas do‚Äê
              cument√©e lors de l‚Äôexplication des n√©cessit√©s de macros de test de  fonction‚Äê
              nalit√©s dans les pages de manuel.

       [1m_XOPEN_SOURCE[0m
              Si cette macro est d√©finie, les en-t√™tes exposent les d√©finitions suivantes :

              ‚Ä¢  Si  elle  est  d√©finie,  quelle que soit sa valeur, les d√©finitions de PO‚Äê
                 SIX.1, POSIX.2 et XPG4 sont expos√©es.

              ‚Ä¢  Les valeurs sup√©rieures ou √©gales √† 500 exposent les d√©finitions de  SUSv2
                 (UNIX 98).

              ‚Ä¢  (Depuis la glibc 2.2) Les valeurs sup√©rieures ou √©gales √† 600 exposent les
                 d√©finitions de SUSv3 (UNIX 03, c'est-√†-dire la sp√©cification de  base  PO‚Äê
                 SIX.1-2001 plus l'extension XSI) et de C99.

              ‚Ä¢  (Depuis  la  glibc 2.10)  Les valeurs sup√©rieures ou √©gales √† 700 exposent
                 les d√©finitions de  SUSv4  (c'est-√†-dire  la  sp√©cification  de  base  PO‚Äê
                 SIX.1-2008 plus l'extension XSI).

              Si  [1m__STRICT_ANSI__  [22mn'est  pas d√©finie, ou si [1m_XOPEN_SOURCE [22mest d√©finie avec
              une valeur sup√©rieure ou  √©gale  √†  500  [4met[24m  que  ni  [1m_POSIX_SOURCE  [22mni  [1m_PO‚Äê[0m
              [1mSIX_C_SOURCE  [22mne sont explicitement d√©finies, alors les macros suivantes sont
              implicitement d√©finies :

              ‚Ä¢  [1m_POSIX_SOURCE [22mest d√©finie √† la valeur 1.

              ‚Ä¢  [1m_POSIX_SOURCE [22mest d√©finie d'apr√®s la valeur de [1m_XOPEN_SOURCE [22m:

                 [1m_XOPEN_SOURCE [22m< 500
                        [1m_POSIX_C_SOURCE [22mest d√©finie √† la valeur 2.

                 500 <= [1m_XOPEN_SOURCE [22m< 600
                        [1m_POSIX_C_SOURCE [22mest d√©finie √† la valeur 199506L.

                 600 <= [1m_XOPEN_SOURCE [22m< 700
                        [1m_POSIX_C_SOURCE [22mest d√©finie √† la valeur 200112L.

                 700 <= [1m_XOPEN_SOURCE [22m(depuis la glibc 2.10)
                        [1m_POSIX_C_SOURCE [22mest d√©finie √† la valeur 200809L.

              De plus, d√©finir [1m_XOPEN_SOURCE [22mavec une valeur de 500 ou  sup√©rieure  produit
              le m√™me effet que d√©finir [1m_XOPEN_SOURCE_EXTENDED[22m.

       [1m_XOPEN_SOURCE_EXTENDED[0m
              Si  cette  macro [4met[24m [1m_XOPEN_SOURCE [22msont d√©finies, exposer les d√©finitions cor‚Äê
              respondant aux extensions  XPG4v2  (SUSv1)  d'UNIX  (UNIX 95).  D√©finir  [1m_XO‚Äê[0m
              [1mPEN_SOURCE  [22mavec  une valeur de 500 ou sup√©rieure produit aussi le m√™me effet
              que d√©finir [1m_XOPEN_SOURCE_EXTENDED[22m. L‚Äôutilisation  de  [1m_XOPEN_SOURCE_EXTENDED[0m
              dans un nouveau code source est √† √©viter.

              Puisque  d√©finir  [1m_XOPEN_SOURCE  [22mavec une valeur de 500 ou sup√©rieure produit
              aussi le m√™me effet que d√©finir [1m_XOPEN_SOURCE_EXTENDED[22m, cette derni√®re (obso‚Äê
              l√®te) macro de test de fonctionnalit√©s n‚Äôest g√©n√©ralement pas d√©crite dans le
              SYNOPSIS des pages de manuel.

       [1m_ISOC99_SOURCE [22m(depuis la glibc 2.1.3)
              Exposer des d√©clarations coh√©rentes avec la norme ISO C99.

              Les versions ant√©rieures de la glibc 2.1.x reconnaissaient une macro  √©quiva‚Äê
              lente  appel√©e [1m_ISOC9X_SOURCE [22m(parce que la norme C99 n'√©tait pas finalis√©e).
              M√™me si l'utilisation de cette derni√®re  macro  est  √†  proscrire,  la  glibc
              continue √† la reconna√Ætre pour des raisons de compatibilit√© ascendante.

              Si [1m_ISOC99_SOURCE [22mest d√©finie, les d√©finitions du premier amendement au C ISO
              (1990) (aussi appel√© C95) sont aussi expos√©es. La  premi√®re  modification  de
              C95 √©tait la prise en charge des jeux de caract√®res internationaux.

              Invoquer  le  compilateur C  avec l‚Äôoption [4m-std=c99[24m produit le m√™me effet que
              d√©finir cette macro.

       [1m_ISOC11_SOURCE [22m(depuis la glibc 2.16)
              Exposer des d√©clarations coh√©rentes avec la norme ISO C11. La  d√©finition  de
              cette   macro   active  √©galement  les  fonctionnalit√©s  C99  et  C95  (comme
              [1m_ISOC99_SOURCE[22m).

              Invoquer le compilateur C avec l‚Äôoption [4m-std=c11[24m produit le  m√™me  effet  que
              d√©finir cette macro.

       [1m_LARGEFILE64_SOURCE[0m
              Exposer  les  d√©finitions  pour l'API alternative d√©finie par le LFS (¬´ Large
              File Summit ¬ª) comme une extension de transition pour la ¬´ Single UNIX Speci‚Äê
              fication ¬ª. Veuillez vous r√©f√©rer √† ‚ü®http://opengroup.org/platform/lfs.html‚ü©.
              L'API alternative consiste en un jeu de  nouveaux  objets  (c'est-√†-dire  des
              fonctions  et types) dont le nom est suffix√© avec ¬´ 64 ¬ª (par exemple [4moff64_t[0m
              pour [4moff_t[24m, [1mlseek64[22m() pour [1mlseek[22m(), etc.). Les  nouveaux  programmes  ne  de‚Äê
              vraient  pas  utiliser cette macro ; √† la place, [4m_FILE_OFFSET_BITS=64[24m devrait
              √™tre utilis√©e.

       [1m_LARGEFILE_SOURCE[0m
              Cette macro a historiquement √©t√© utilis√©e pour  exposer  certaines  fonctions
              (en  particulier  [1mfseeko[22m()  et [1mftello[22m()) qui contournent les limites d‚Äôinter‚Äê
              faces de programmation pr√©c√©dentes ([1mfeek[22m() et  [1mftell[22m())  qui  utilisent  [4mlong[0m
              pour  les positions de fichier. Cette macro est implicitement d√©finie si [1m_XO‚Äê[0m
              [1mPEN_SOURCE [22mest d√©finie avec une valeur sup√©rieure ou √©gale √†  500.  Les  nou‚Äê
              veaux programmes ne devraient pas utiliser cette macro. D√©finir [1m_XOPEN_SOURCE[0m
              comme cela vient d‚Äô√™tre d√©crit ou d√©finir [1m_FILE_OFFSET_BITS [22m√†  la  valeur  64
              sont les m√©canismes pr√©f√©r√©s pour obtenir le m√™me r√©sultat.

       [1m_FILE_OFFSET_BITS[0m
              D√©finir  cette  macro √† la valeur 64 convertit automatiquement les r√©f√©rences
              aux fonctions et types de donn√©es 32 bits li√©s aux E/S sur  les  fichiers  et
              aux  op√©rations  sur le syst√®me de fichiers en r√©f√©rences √† leurs √©quivalents
              64 bits. C'est utile pour les E/S sur des gros fichiers (> 2 gigaoctets)  sur
              les  syst√®mes  32 bits. Cette macro permet aux programmes correctement √©crits
              d'utiliser de gros fichiers avec seulement une recompilation.

              Les syst√®mes 64 bits permettent d'office d'utiliser des  fichiers  de  taille
              sup√©rieure √† 2 gigaoctets, et sur ces syst√®mes cette macro n'a aucun effet.

       [1m_BSD_SOURCE [22m(obsol√®te depuis la glibc 2.20)
              Si  cette macro est d√©finie avec n‚Äôimporte quelle valeur, les d√©finitions h√©‚Äê
              rit√©es de BSD sont expos√©es par les en-t√™tes.

              Jusqu‚Äô√† la glibc 2.18 incluse, les d√©finitions BSD sont  pr√©f√©r√©es  dans  les
              situations  o√π  les  normes  sont en conflit, sauf si au moins une des macros
              [1m_SVID_SOURCE[22m,    [1m_POSIX_SOURCE[22m,    [1m_POSIX_C_SOURCE[22m,    [1m_XOPEN_SOURCE[22m,    [1m_XO‚Äê[0m
              [1mPEN_SOURCE_EXTENDED  [22mou  [1m_GNU_SOURCE  [22mest d√©finie, auquel cas les d√©finitions
              BSD sont d√©favoris√©es. Depuis la glibc 2.19, [1m_BSD_SOURCE  [22mne  force  plus  la
              pr√©f√©rence des d√©finitions BSD en cas de conflit.

              Depuis la glibc 2.20, cette macro est obsol√®te. Sa d√©finition a le m√™me effet
              que la d√©finition de [1m_DEFAULT_SOURCE[22m, mais g√©n√®re un avertissement de  compi‚Äê
              lation  (√†  moins  que [1m_DEFAULT_SOURCE [22msoit √©galement d√©finie). Utilisez [1m_DE‚Äê[0m
              [1mFAULT_SOURCE [22m√† la place. Pour permettre au code n√©cessitant [1m_BSD_SOURCE  [22mdans
              glibc 2.19  et  versions  ant√©rieures,  et [1m_DEFAULT_SOURCE [22mdans glibc 2.20 et
              version suivantes, de compiler  sans  avertissement,  d√©finissez  [4m√†[24m  [4mla[24m  [4mfois[0m
              [1m_BSD_SOURCE [22met [1m_DEFAULT_SOURCE[22m.

       [1m_SVID_SOURCE [22m(obsol√®te depuis la glibc 2.20)
              Si cette macro est d√©finie (quelle que soit sa valeur), les en‚Äêt√™tes exposent
              les d√©finitions h√©rit√©es de System V. (SVID  ==  System V  Interface  Defini‚Äê
              tion ; consultez [1mstandards[22m(7).)

              Depuis  la  glibc 2.20,  cette  macro  est  obsol√®te  de  la m√™me mani√®re que
              [1m_BSD_SOURCE[22m.

       [1m_DEFAULT_SOURCE [22m(depuis la glibc 2.19)
              Cette macro peut √™tre d√©finie pour s‚Äôassurer que les  d√©finitions  par  ¬´ d√©‚Äê
              faut ¬ª  sont fournies m√™me si les valeurs par d√©faut avaient √©t√© d√©sactiv√©es,
              comme cela arrive quand les macros individuelles sont d√©finies  explicitement
              ou  quand  le compilateur est appel√© dans un de ses modes ¬´ normalis√©s ¬ª (par
              exemple [4mcc[24m [4m-std=c99[24m). D√©finir [1m_DEFAULT_SOURCE [22mn'a aucun  effet  sans  d√©finir
              d'autres macros individuelles ou invoquer le compilateur dans un de ses modes
              ¬´ normalis√©s ¬ª.

              Les d√©finitions par ¬´ d√©faut ¬ª incluent celles requises par  POSIX.1-2008  et
              C99  ISO ainsi que plusieurs d√©finitions d√©riv√©es de BSD et System V. Avec la
              glibc 2.19 et avant, ces d√©finitions par d√©faut sont √† peu pr√®s  √©quivalentes
              √† la d√©finition explicite suivante :

                  cc -D_BSD_SOURCE -D_SVID_SOURCE -D_POSIX_C_SOURCE=200809

       [1m_ATFILE_SOURCE [22m(depuis la glibc 2.4)
              Si cette macro est d√©finie (quelle que soit sa valeur), les en-t√™tes exposent
              les d√©finitions d'une s√©rie de fonctions avec le suffixe  ¬´ at ¬ª ;  consultez
              [1mopenat[22m(2). Depuis glibc 2.10, cette macro est aussi d√©finie de mani√®re impli‚Äê
              cite si [1m_POSIX_C_SOURCE [22mest d√©finie avec une valeur  sup√©rieure  ou  √©gale  √†
              200809L.

       [1m_GNU_SOURCE[0m
              D√©finir cette macro (avec n'importe quelle valeur) d√©finit implicitement [1m_AT‚Äê[0m
              [1mFILE_SOURCE[22m,  [1m_LARGEFILE64_SOURCE[22m,  [1m_ISOC99_SOURCE[22m,   [1m_XOPEN_SOURCE_EXTENDED[22m,
              [1m_POSIX_SOURCE[22m,  [1m_POSIX_C_SOURCE [22mavec la valeur 200809L (200112L dans les ver‚Äê
              sions de la glibc ant√©rieures √† 2.10, 199506L dans les versions de  la  glibc
              ant√©rieures  √†  2.5, 199309L dans les versions de la glibc ant√©rieures √† 2.1)
              et [1m_XOPEN_SOURCE [22mavec la valeur 700 (600 dans les versions de la glibc  ant√©‚Äê
              rieures  √†  2.10,  500  dans  les versions de la glibc ant√©rieures √† 2.2). De
              plus, de nombreuses extensions sp√©cifiques GNU sont expos√©es.

              Depuis la glibc 2.19, d√©finir [1m_GNU_SOURCE [22mprovoque la d√©finition implicite de
              [1m_DEFAULT_SOURCE[22m.  Dans  les  versions ant√©rieures √† 2.20, d√©finir [1m_GNU_SOURCE[0m
              provoque la d√©finition implicite de [1m_BSD_SOURCE [22met [1m_SVID_SOURCE[22m.

       [1m_REENTRANT[0m
              Historiquement, dans diverses biblioth√®ques C il √©tait n√©cessaire de  d√©finir
              cette macro dans tous les codes multithread (cela peut √™tre encore n√©cessaire
              dans quelques biblioth√®ques C). Dans la glibc, cette macro expose  aussi  des
              d√©finitions de certaines fonctions r√©entrantes.

              Cependant,  la  glibc est thread-safe par d√©faut depuis de nombreuses ann√©es.
              Depuis la glibc 2.3, le seul effet de d√©finir [1m_REENTRANT [22mest d‚Äôactiver une ou
              deux  des m√™mes d√©clarations qui sont activ√©es en d√©finissant [1m_POSIX_C_SOURCE[0m
              avec une valeur 199606L ou sup√©rieure.

              [1m_REENTRANT [22mest d√©sormais obsol√®te. Dans la glibc 2.25 et les versions  post√©‚Äê
              rieures,  d√©finir  [1m_REENTRANT  [22mest  √©quivalent √† d√©finir [1m_POSIX_C_SOURCE [22mavec
              comme valeur 199606L. Si un niveau de conformit√© POSIX sup√©rieur  est  s√©lec‚Äê
              tionn√© par n‚Äôimporte quel autre moyen (tel que [1m_POSIX_C_SOURCE [22mlui-m√™me, [1m_XO‚Äê[0m
              [1mPEN_SOURCE[22m, [1m_DEFAULT_SOURCE [22mou [1m_GNU_SOURCE[22m), puis d√©finir [1m_REENTRANT [22mn‚Äôa  au‚Äê
              cun effet.

              Cette  macro  est  automatiquement  d√©finie  si la compilation est faite avec
              [4mcc[24m [4m-pthread[24m.

       [1m_THREAD_SAFE[0m
              Synonyme de [1m_REENTRANT [22m(obsol√®te), fourni pour la compatibilit√© avec d'autres
              impl√©mentations.

       [1m_FORTIFY_SOURCE [22m(depuis la glibc 2.3.4)
              D√©finir  cette macro cause certaines v√©rifications peu pouss√©es d‚Äô√™tre r√©ali‚Äê
              s√©es pour d√©tecter quelques d√©passements de tampon lors de  l‚Äôemploi  de  di‚Äê
              verses  cha√Ænes  et  de  fonctions  de  manipulation de m√©moire (par exemple,
              [1mmemcpy[22m(3), [1mmemset[22m(3),  [1mstpcpy[22m(3),  [1mstrcpy[22m(3),  [1mstrncpy[22m(3),  [1mstrcat[22m(3),  [1mstrn‚Äê[0m
              [1mcat[22m(3),  [1msprintf[22m(3),  [1msnprintf[22m(3),  [1mvsprintf[22m(3), [1mvsnprintf[22m(3), [1mgets[22m(3) et les
              variantes de caract√®res larges de celles-ci). Pour  certaines  fonctions,  la
              pertinence  de  l‚Äôargument  est  v√©rifi√©e.  Par exemple, une v√©rification est
              faite qu‚Äôun argument [4mmode[24m soit fourni √† [1mopen[22m(2) quand les  indicateurs  indi‚Äê
              qu√©s  incluent  [1mO_CREAT[22m.  Tous  les probl√®mes ne sont pas d√©tect√©s, seulement
              quelques cas courants.

              Si [1m_FORTIFY_SOURCE [22mest d√©fini √† 1, avec un niveau 1 d'optimisation de  compi‚Äê
              lateur  ([4mgcc[24m [4m-O1[24m)  ou sup√©rieur, des v√©rifications sans influence sur le com‚Äê
              portement de programmes conformes sont faites.  Avec  [1m_FORTIFY_SOURCE  [22md√©fini
              √† 2,  des  v√©rifications  suppl√©mentaires  sont  ajout√©es, mais certains pro‚Äê
              grammes conformes peuvent √©chouer.

              Certaines v√©rifications peuvent √™tre effectu√©es lors  de  la  compilation  (√†
              l‚Äôaide d‚Äôune logique de macros impl√©ment√©s dans les en-t√™tes) et g√©n√®rent des
              avertissements du compilateur. D'autres v√©rifications ont lieu √†  l'ex√©cution
              et causent une erreur si le test √©choue.

              L'utilisation  de  cette  macro n√©cessite une gestion par le compilateur, qui
              est disponible dans [1mgcc[22m(1) depuis la version 4.0.

   [1mD√©finitions par d√©faut, d√©finitions implicites et combinaison de d√©finitions[0m
       Si aucune macro de test de fonctionnalit√©s n'est d√©finie  explicitement,  alors  les
       macros  de test suivantes sont d√©finies par d√©faut : [1m_BSD_SOURCE [22m(dans la glibc 2.19
       et avant), [1m_SVID_SOURCE [22m(dans la glibc 2.19 et avant),  [1m_DEFAULT_SOURCE  [22m(depuis  la
       glibc 2.19),  [1m_POSIX_SOURCE [22met [1m_POSIX_C_SOURCE[22m=200809L (200112L dans les versions de
       la glibc ant√©rieures √† 2.10, 199506L dans les versions de  la  glibc  ant√©rieures  √†
       2.4, 199309L dans les versions de la glibc ant√©rieures √† 2.1).

       Si  une  des  macros  [1m__STRICT_ANSI__[22m,  [1m_ISOC99_SOURCE[22m,  [1m_ISOC11_SOURCE  [22m(depuis  la
       glibc 2.18) [1m_POSIX_SOURCE[22m,  [1m_POSIX_C_SOURCE[22m,  [1m_XOPEN_SOURCE[22m,  [1m_XOPEN_SOURCE_EXTENDED[0m
       (dans  la  glibc 2.11  et  avant),  [1m_BSD_SOURCE  [22m(dans  la  glibc 2.19  et avant) ou
       [1m_SVID_SOURCE  [22m(dans  la  glibc 2.19  et  avant)  est  d√©finie  explicitement,  alors
       [1m_BSD_SOURCE[22m, [1m_SVID_SOURCE [22met [1m_DEFAULT_SOURCE [22mne sont pas d√©finies par d√©faut.

       Si  ni  [1m_POSIX_SOURCE  [22mni [1m_POSIX_C_SOURCE [22mne sont d√©finies explicitement et que soit
       [1m__STRICT_ANSI__ [22mn'est pas d√©finie soit [1m_XOPEN_SOURCE [22mest d√©finie √† une valeur  sup√©‚Äê
       rieure ou √©gale √† 500, alors

       ‚Äì  [1m_POSIX_SOURCE [22mest d√©finie √† la valeur 1

       ‚Äì  [1m_POSIX_C_SOURCE [22mest d√©finie avec une des valeurs suivantes :

          ‚Ä¢  2, si [1m_XOPEN_SOURCE [22mest d√©finie avec une valeur inf√©rieure √† 500 ;

          ‚Ä¢  199506L,  si  [1m_XOPEN_SOURCE [22mest d√©finie √† une valeur sup√©rieure ou √©gale √† 500
             et inf√©rieure √† 600, ou

          ‚Ä¢  200112L (depuis la glibc 2.4), si [1m_XOPEN_SOURCE [22mest d√©finie √† une valeur sup√©‚Äê
             rieure ou √©gale √† 600 et inf√©rieure √† 700 ;

          ‚Ä¢  200809L  (depuis la glibc 2.10), si [1m_XOPEN_SOURCE [22mest d√©finie √† une valeur su‚Äê
             p√©rieure ou √©gale √† 700.

          ‚Ä¢  Les versions plus anciennes de la glibc ne connaissent pas les valeurs 200112L
             et 200809L pour [1m_POSIX_C_SOURCE [22met la configuration de cette macro d√©pendra de
             la version de la glibc.

          ‚Ä¢  Si [1m_XOPEN_SOURCE [22mn'est pas d√©fini, alors la configuration  de  [1m_POSIX_C_SOURCE[0m
             d√©pend de la version de la glibc : 199506L pour les versions de la glibc ant√©‚Äê
             rieures √† 2.4,  200112L  pour  les  glibc  2.4  √† 2.9  et  200809L  depuis  la
             glibc 2.10.

       Plusieurs macros peuvent √™tre d√©finies, les r√©sultats sont additifs.

[1mCONFORMIT√â[0m
       POSIX.1 sp√©cifie [1m_POSIX_C_SOURCE[22m, [1m_POSIX_SOURCE [22met [1m_XOPEN_SOURCE[22m.

       [1m_XOPEN_SOURCE_EXTENDED  [22m√©tait  sp√©cifi√©e par XPG4v2 (c‚Äôest-√†-dire SUSv1), mais n‚Äôest
       pas pr√©sente dans SUSv2 et les versions suivantes. [1m_FILE_OFFSET_BITS [22mn‚Äôest sp√©cifi√©e
       par aucune norme, mais est employ√©e dans quelques autres impl√©mentations.

       [1m_BSD_SOURCE[22m,   [1m_SVID_SOURCE[22m,  [1m_DEFAULT_SOURCE[22m,  [1m_ATFILE_SOURCE[22m,  [1m_GNU_SOURCE[22m,  [1m_FOR‚Äê[0m
       [1mTIFY_SOURCE[22m, [1m_REENTRANT [22met [1m_THREAD_SAFE [22msont sp√©cifiques √† Linux (glibc).

[1mNOTES[0m
       [4m<features.h>[24m est un fichier d'en‚Äêt√™te sp√©cifique √†  Linux/glibc.  D'autres  syst√®mes
       ont un fichier similaire, mais typiquement sous un nom diff√©rent. Ce fichier est in‚Äê
       clus automatiquement par les autres en‚Äêt√™tes si n√©cessaire : il n'est pas n√©cessaire
       de l'inclure explicitement pour utiliser les macros de test de fonctionnalit√©s.

       Selon  quelles  macros  de  test  de  fonctionnalit√©s ci‚Äêdessus sont d√©finies, [4m<fea‚Äê[0m
       [4mtures.h>[24m d√©finit diverses autres macros qui sont test√©es  par  les  en‚Äêt√™tes  de  la
       glibc.  Ces  macros  ont  des noms pr√©fix√©s par deux caract√®res de soulignement (par
       exemple [1m__USE_MISC[22m). Les programmes ne doivent [4mjamais[24m d√©finir  ces  macros  directe‚Äê
       ment ; ils doivent utiliser les macros de test de fonctionnalit√©s de la liste pr√©c√©‚Äê
       dente.

[1mEXEMPLES[0m
       Le programme ci-dessous peut √™tre utilis√© pour explorer comment les diff√©rentes  ma‚Äê
       cros  de  test  de  fonctionnalit√©s sont configur√©es en fonction de la version de la
       glibc et quelle macros sont explicitement d√©finies. L'ex√©cution qui suit dans un in‚Äê
       terpr√©teur de commandes, sur un syst√®me avec la glibc 2.10, montre quelques exemples
       de ce qu'on peut voir :

           $ [1mcc ftm.c[0m
           $ [1m./a.out[0m
           _POSIX_SOURCE defined
           _POSIX_C_SOURCE defined: 200809L
           _BSD_SOURCE defined
           _SVID_SOURCE defined
           _ATFILE_SOURCE defined
           $ [1mcc -D_XOPEN_SOURCE=500 ftm.c[0m
           $ [1m./a.out[0m
           _POSIX_SOURCE defined
           _POSIX_C_SOURCE defined: 199506L
           _XOPEN_SOURCE defined: 500
           $ [1mcc -D_GNU_SOURCE ftm.c[0m
           $ [1m./a.out[0m
           _POSIX_SOURCE defined
           _POSIX_C_SOURCE defined: 200809L
           _ISOC99_SOURCE defined
           _XOPEN_SOURCE defined: 700
           _XOPEN_SOURCE_EXTENDED defined
           _LARGEFILE64_SOURCE defined
           _BSD_SOURCE defined
           _SVID_SOURCE defined
           _ATFILE_SOURCE defined
           _GNU_SOURCE defined

   [1mSource du programme[0m

       /* ftm.c */

       #include <stdint.h>
       #include <stdio.h>
       #include <unistd.h>
       #include <stdlib.h>

       int
       main(int argc, char *argv[])
       {
       #ifdef _POSIX_SOURCE
           printf("_POSIX_SOURCE defined\n");
       #endif

       #ifdef _POSIX_C_SOURCE
           printf("_POSIX_C_SOURCE defined: %jdL\n",
                   (intmax_t) _POSIX_C_SOURCE);
       #endif

       #ifdef _ISOC99_SOURCE
           printf("_ISOC99_SOURCE defined\n");
       #endif

       #ifdef _ISOC11_SOURCE
           printf("_ISOC11_SOURCE defined\n");
       #endif

       #ifdef _XOPEN_SOURCE
           printf("_XOPEN_SOURCE defined: %d\n", _XOPEN_SOURCE);
       #endif

       #ifdef _XOPEN_SOURCE_EXTENDED
           printf("_XOPEN_SOURCE_EXTENDED defined\n");
       #endif

       #ifdef _LARGEFILE64_SOURCE
           printf("_LARGEFILE64_SOURCE defined\n");
       #endif

       #ifdef _FILE_OFFSET_BITS
           printf("_FILE_OFFSET_BITS defined: %d\n", _FILE_OFFSET_BITS);
       #endif

       #ifdef _BSD_SOURCE
           printf("_BSD_SOURCE defined\n");
       #endif

       #ifdef _SVID_SOURCE
           printf("_SVID_SOURCE defined\n");
       #endif

       #ifdef _DEFAULT_SOURCE
           printf("_DEFAULT_SOURCE defined\n");
       #endif

       #ifdef _ATFILE_SOURCE
           printf("_ATFILE_SOURCE defined\n");
       #endif

       #ifdef _GNU_SOURCE
           printf("_GNU_SOURCE defined\n");
       #endif

       #ifdef _REENTRANT
           printf("_REENTRANT defined\n");
       #endif

       #ifdef _THREAD_SAFE
           printf("_THREAD_SAFE defined\n");
       #endif

       #ifdef _FORTIFY_SOURCE
           printf("_FORTIFY_SOURCE defined\n");
       #endif

           exit(EXIT_SUCCESS);
       }

[1mVOIR AUSSI[0m
       [1mlibc[22m(7), [1mstandards[22m(7), [1msystem_data_types[22m(7)

       La section ¬´ Feature Test Macros ¬ª de [4minfo[24m [4mlibc[24m.

       [4m/usr/include/features.h[0m

[1mCOLOPHON[0m
       Cette page fait partie de la publication 5.13 du projet [4mman-pages[24m  Linux.  Une  des‚Äê
       cription  du  projet  et des instructions pour signaler des anomalies et la derni√®re
       version    de    cette    page     peuvent     √™tre     trouv√©es     √†     l'adresse
       https://www.kernel.org/doc/man-pages/.

[1mTRADUCTION[0m
       La  traduction  fran√ßaise  de cette page de manuel a √©t√© cr√©√©e par Christophe Blaess
       <https://www.blaess.fr/christophe/>,  St√©phan   Rafin   <stephan.rafin@laposte.net>,
       Thierry  Vignaud  <tvignaud@mandriva.com>,  Fran√ßois  Micaux,  Alain  Portal  <apor‚Äê
       tal@univ-montp2.fr>, Jean-Philippe Gu√©rard <fevrier@tigreraye.org>, Jean-Luc  Coulon
       (f5ibh)  <jean-luc.coulon@wanadoo.fr>,  Julien Cristau <jcristau@debian.org>, Thomas
       Huriaux  <thomas.huriaux@gmail.com>,  Nicolas   Fran√ßois   <nicolas.francois@centra‚Äê
       liens.net>, Florentin Duneau <fduneau@gmail.com>, Simon Paillard <simon.paillard@re‚Äê
       sel.enst-bretagne.fr>, Denis Barbier <barbier@debian.org>, David Pr√©vot <david@tila‚Äê
       pin.org> et Jean-Paul Guillonneau <guillonneau.jeanpaul@free.fr>

       Cette  traduction  est  une  documentation  libre¬†;  veuillez vous reporter √† la GNU
       General Public License version¬†3 ‚ü®https://www.gnu.org/licenses/gpl-3.0.html‚ü© concer‚Äê
       nant  les conditions de copie et de distribution. Il n'y a aucune RESPONSABILIT√â L√â‚Äê
       GALE.

       Si vous d√©couvrez un bogue dans la traduction de cette page de manuel, veuillez  en‚Äê
       voyer un message √† ‚ü®debian-l10n-french@lists.debian.org‚ü©.

Linux                                   22 mars 2021                 FEATURE_TEST_MACROS(7)
